/*************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                      *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                      *
 * This program is free software: you can redistribute it and/or modify              *
 * it under the terms of the GNU General Public License as published by              *
 * the Free Software Foundation, either version 2 of the License, or                 *
 * (at your option) any later version.                                               *
 * This program is distributed in the hope that it will be useful,                   *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                    *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                     *
 * GNU General Public License for more details.                                      *
 * You should have received a copy of the GNU General Public License                 *
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.grpc.util";
option java_outer_classname = "ADempiereDictionary";
option objc_class_prefix = "HLW";

package dictionary;

// The greeting service definition.
service DictionaryService {
  // Request Menu from Parent UUID
  rpc RequestMenuAndChild(EntityRequest) returns (Menu) {}
  // Request Menu
  rpc RequestMenu(EntityRequest) returns (Menu) {}
  // Request a Window
  rpc RequestWindow(EntityRequest) returns (Window) {}
  // Request Window and tabs
  rpc RequestWindowAndTabs(EntityRequest) returns (Window) {}
  // Request a Tab
  rpc RequestTab(EntityRequest) returns (Tab) {}
  // Request a Tab and Fields
  rpc RequestTabAndFields(EntityRequest) returns (Tab) {}
  // Request a Field
  rpc RequestField(EntityRequest) returns (Field) {}
}


// The client request contains client info for request.
message ApplicationRequest {
	string uuid = 1;
	string language = 2;
	string clientVersion = 3;
}

// Object request
message EntityRequest {
	int32 id = 1;
	string uuid = 2;
	ApplicationRequest applicationRequest = 3;
}

// Window
message Window {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string description = 4;
  	string help = 5;
  	bool isSOTrx = 6;
  	//	External Info
  	ContextInfo contextInfo = 7;
  	repeated Tab tabs = 8;
}

// Tab
message Tab {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string description = 4;
  	string help = 5;
  	// Attributes
  	string tableName = 6;
  	int32 sequence = 7;
  	int32 tabLevel = 8;
  	//
  	bool isSingleRow = 9;
  	bool isAdvancedTab = 10;
  	bool isHasTree = 11;
  	bool isInfoTab = 12;
  	bool isSortTab = 13;
  	bool isTranslationTab = 14;
  	bool isReadOnly = 15;
  	bool isInsertRecord = 16;
  	bool isView = 17;
  	bool isDeleteable = 18;
  	bool isDocument = 19;
  	int32 accessLevel = 20;
  	string linkColumnName = 21;
  	string parentColumnName = 22;
  	string displayLogic = 23;
  	string commitWarning = 24;
  	string orderByClause = 25;
  	// External Info
  	ContextInfo contextInfo = 26;
  	Process process = 27;
  	repeated Field fields = 28;
  	FieldGroup fieldGroup = 29;
}

// Field
message Field {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string description = 4;
  	string help = 5;
  	int32 sequence = 6;
  	string columnName = 7;
  	bool isDisplayed = 8;
  	bool isDisplayedGrid = 9;
  	bool isReadOnly = 10;
  	bool isAllowCopy = 11;
  	bool isEncrypted = 12;
  	bool isSameLine = 13;
  	bool isHeading = 14;
  	bool isFieldOnly = 15;
  	bool isQuickEntry = 16;
  	bool isMandatory = 17;
  	bool isKey = 18;
  	bool isParent = 19;
  	bool isUpdateable = 20;
  	bool isIdentifier = 21;
  	bool isAllowLogging = 22;
  	bool isSelectionColumn = 23;
  	bool isRange = 24;
  	bool isAlwaysUpdateable = 25;
  	bool isTranslated = 26;
  	int32 identifierSequence = 77;
  	string displayLogic = 28;
  	int32 displayType = 29;
  	string defaultValue = 30;
  	string readOnlyLogic = 31;
  	string mandatoryLogic = 32;
  	string callout = 33;
  	string columnSQL = 34;
  	string vFormat = 35;
  	string valueMin = 36;
  	string valueMax = 37;
  	string formatPattern = 38;
  	// External Info
  	ContextInfo contextInfo = 39;
  	FieldGroup fieldGroup = 40;
  	Validation validation = 41;
  	FieldDefinition fieldDefinition = 42;
  	Reference reference = 43;
  	Process process = 44;
  	// Smart Browser Field Compatibility
	bool isQueryCriteria = 45;
	bool isOrderBy = 46;
	int32 seqNoGrid = 47;
	int32 sortNo = 48;
	bool isInfoOnly = 49;
  	// Process Parameter Compatibility
  	string defaultValueTo = 50;
}

// Context Info
message ContextInfo {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string description = 4;
  	MessageText messageText = 5;
  	string sqlStatement = 6;
}

// Message
message MessageText {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
  	string msgType = 4;
  	string msgText = 5;
  	string msgTip = 6;
}

// Context Info
message FieldGroup {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string fieldGroupType = 4;
}

// Context Info
message FieldDefinition {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
  	string fieldGroupType = 5;
  	repeated FieldCondition conditions = 6;
}

// Field Condition
message FieldCondition {
	int32 id = 1;
	string uuid = 2;
	string condition = 3;
  	string Stylesheet = 4;
}

// Process
message Process {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
  	string description = 5;
  	string help = 6;
  	bool isReport = 7;
  	int32 accessLevel = 8;
  	string showHelp = 9;
  	bool isDirectPrint = 10;
  	repeated Field parameters = 11;
}

// Form
message Form {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string description = 4;
  	string help = 5;
  	int32 accessLevel = 6;
  	string className = 7;
}

// Smart Browser
message SmartBrowser {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
  	string description = 5;
  	string help = 6;
  	int32 accessLevel = 8;
  	string whereClause = 9;
  	bool isUpdateable = 10;
  	bool IsDeleteable = 11;
  	bool IsSelectedByDefault = 12;
  	bool IsCollapsibleByDefault = 13;
  	bool IsExecutedQueryByDefault = 14;
  	bool IsShowTotal = 15;
  	string viewUuid = 16;
  	// External Reference
  	Window window = 17;
  	Process process = 18;
  	repeated Field fields = 19;
}

// Validation
message Validation {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string validationType = 4;
  	string code = 5;
}

// Foreign Reference
message Reference {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
  	string validationType = 4;
  	// External Info
  	ReferenceTable referenceTable = 5;
  	repeated ReferenceValue values = 6;
}

// Foreign Reference Value
message ReferenceValue {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
  	string name = 4;
  	string description = 5;
}

// Foreign Reference Table
message ReferenceTable {
	int32 id = 1;
	string uuid = 2;
	string tableName = 3;
  	string keyColumnName = 4;
  	string displayColumnName = 5;
  	bool isDisplayIdentifier = 6;
  	bool isValueDisplayed = 7;
  	string displaySQL = 8;
  	string whereClause = 9;
}

// Menu
message Menu {
	int32 id = 1;
	string uuid = 2;
	string parentUuid = 4;
	string name = 5;
  	string description = 6;
  	string sequence = 7;
  	bool isReadOnly = 8;
  	bool isSummary = 9;
  	bool isSOTrx = 10;
  	string action = 11;
  	// Supported References
  	string formUuid = 12;
  	string windowUuid = 13;
  	string processUuid = 14;
  	string smartBrowserUuid = 15;
  	repeated Menu childs = 16;
}
